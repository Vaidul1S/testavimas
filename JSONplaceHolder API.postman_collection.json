{
	"info": {
		"_postman_id": "9daddfe4-f20b-49db-96ab-f5fa502119de",
		"name": "JSONplaceHolder API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "41184732"
	},
	"item": [
		{
			"name": "Posts",
			"item": [
				{
					"name": "AllPosts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Testuojam request laika\r",
									"pm.test(\"ar request laikas tinkamas\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"ar request laikas tarp 100 ir 1000\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.within(100,1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 2xx\", function () {\r",
									"    pm.expect(pm.response.code).to.be.within(200, 203);\r",
									"});\r",
									"\r",
									"\r",
									"//Tikrinam ar body yra JSON formato\r",
									"\r",
									"pm.test('Body JSON formato?', function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"\r",
									"pm.test('Body JSON formato?', function() {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/posts"
					},
					"response": []
				},
				{
					"name": "GetPost",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/posts/1"
					},
					"response": []
				},
				{
					"name": "NewPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Testuojam request laika\r",
									"pm.test(\"ar request laikas tinkamas\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"ar request laikas tarp 100 ir 1000\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.within(100,1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 2xx\", function () {\r",
									"    pm.expect(pm.response.code).to.be.within(200, 203);\r",
									"});\r",
									"\r",
									"\r",
									"//Tikrinam ar body yra JSON formato\r",
									"\r",
									"pm.test('Body JSON formato?', function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"\r",
									"pm.test('Body JSON formato?', function() {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=UTF-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n  \"title\": \"foo\",\r\n  \"body\": \"bar\",\r\n  \"userId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "kintamasis",
									"value": "12",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n   \"id\": 1,\r\n    \"title\": \"test\",\r\n    \"body\": \"test\",\r\n    \"userId\": 1\r\n   }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/posts/1"
					},
					"response": []
				},
				{
					"name": "PatchPost",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n  \"title\": \"foo\",\r\n  \"body\": \"doifngodmg\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/posts/1"
					},
					"response": []
				},
				{
					"name": "DeletePost",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/posts/12"
					},
					"response": []
				},
				{
					"name": "style.css",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/styles.css/"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"// Testuojam request laika\r",
							"pm.test(\"ar request laikas tinkamas\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "AllComments",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/comments"
					},
					"response": []
				},
				{
					"name": "GetComment",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/comments/3"
					},
					"response": []
				},
				{
					"name": "NewComment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \r\n        \"name\": \"new name\",\r\n        \"email\": \"Eliseo@gardner.biz\",\r\n        \"body\": \"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/comments"
					},
					"response": []
				},
				{
					"name": "UpdateComment",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"postId\": 1,\r\n    \"id\": 3,\r\n    \"name\": \"test test\",\r\n    \"email\": \"test@test.biz\",\r\n    \"body\": \"quia molestiae reprehenderit quasi aspernatur\\naut expedita occaecati aliquam eveniet laudantium\\nomnis quibusdam delectus saepe quia accusamus maiores nam est\\ncum et ducimus et vero voluptates excepturi deleniti ratione\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/comments/1"
					},
					"response": []
				},
				{
					"name": "PatchComment",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \"name\": \"testing\"\r\n    \r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/comments/1"
					},
					"response": []
				},
				{
					"name": "DeleteComment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/comments/1"
					},
					"response": []
				}
			]
		},
		{
			"name": "Albums",
			"item": [
				{
					"name": "AllAlbums",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/albums"
					},
					"response": []
				},
				{
					"name": "GetAlbum",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/albums/1"
					},
					"response": []
				},
				{
					"name": "NewAlbum",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \"title\": \"test test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/albums"
					},
					"response": []
				},
				{
					"name": "UpdateAlbum",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": 15,\r\n    \"title\": \"test test test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/albums/1"
					},
					"response": []
				},
				{
					"name": "PatchAlbum",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \r\n    \"title\": \"testtttttttttttttttt\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/albums/1"
					},
					"response": []
				},
				{
					"name": "DeleteAlbum",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/albums/1"
					},
					"response": []
				}
			]
		},
		{
			"name": "Photos",
			"item": [
				{
					"name": "AllPhotos",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/photos"
					},
					"response": []
				},
				{
					"name": "GetPhoto",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/photos/1"
					},
					"response": []
				},
				{
					"name": "NewPhoto",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"albumId\": 1,\r\n    \r\n    \"title\": \"test test\",\r\n    \"url\": \"https://via.placeholder.com/600/92c952\",\r\n    \"thumbnailUrl\": \"https://via.placeholder.com/150/92c952\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/photos"
					},
					"response": []
				},
				{
					"name": "UpdatePhoto",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"albumId\": 1,\r\n    \r\n    \"title\": \"test test\",\r\n    \"url\": \"https://via.placeholder.com/600/92c952\",\r\n    \"thumbnailUrl\": \"https://via.placeholder.com/150/92c952\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/photos/1"
					},
					"response": []
				},
				{
					"name": "PatchPhoto",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \r\n    \"title\": \"test test\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/photos/1"
					},
					"response": []
				},
				{
					"name": "DeletePhoto",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/photos/1"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "AllUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/users"
					},
					"response": []
				},
				{
					"name": "GetUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/users/1"
					},
					"response": []
				},
				{
					"name": "NewUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \"name\": \"test test\",\r\n    \"username\": \"Bret\",\r\n    \"email\": \"Sincere@april.biz\",\r\n    \"address\": {\r\n        \"street\": \"Kulas Light\",\r\n        \"suite\": \"Apt. 556\",\r\n        \"city\": \"Gwenborough\",\r\n        \"zipcode\": \"92998-3874\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\",\r\n    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n        \"name\": \"Romaguera-Crona\",\r\n        \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n        \"bs\": \"harness real-time e-markets\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/users"
					},
					"response": []
				},
				{
					"name": "UpdateUser",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"test testeris\",\r\n    \"username\": \"Bret\",\r\n    \"email\": \"Sincere@april.biz\",\r\n    \"address\": {\r\n        \"street\": \"Kulas Light\",\r\n        \"suite\": \"Apt. 556\",\r\n        \"city\": \"Gwenborough\",\r\n        \"zipcode\": \"92998-3874\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\",\r\n    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n        \"name\": \"Romaguera-Crona\",\r\n        \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n        \"bs\": \"harness real-time e-markets\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/users/1"
					},
					"response": []
				},
				{
					"name": "PatchUser",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/users/1"
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/users/10"
					},
					"response": []
				}
			]
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "AllTodos",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/todos"
					},
					"response": []
				},
				{
					"name": "GetTodos",
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/todos/2"
					},
					"response": []
				},
				{
					"name": "NewTodos",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 1,\r\n    \r\n    \"title\": \"test test\",\r\n    \"completed\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/todos"
					},
					"response": []
				},
				{
					"name": "UpdateTodos",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": 22,\r\n    \"title\": \"test test\",\r\n    \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/todos/22"
					},
					"response": []
				},
				{
					"name": "PatchTodos",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \r\n    \r\n    \"title\": \"test test test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://jsonplaceholder.typicode.com/todos/2"
					},
					"response": []
				},
				{
					"name": "DeleteTodos",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "https://jsonplaceholder.typicode.com/todos/22"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Testuojam request laika\r",
					"pm.test(\"ar request laikas tinkamas\", function() {\r",
					"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
					"});"
				]
			}
		}
	]
}