{
	"info": {
		"_postman_id": "ba852c45-3ddc-4b87-9bd3-fdadd06a9cf5",
		"name": "DummyJSON",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "41184732"
	},
	"item": [
		{
			"name": "DynamicImages",
			"item": [
				{
					"name": "Generate square image",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}image/150"
					},
					"response": []
				},
				{
					"name": "Generate custom size image",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}image/200x100"
					},
					"response": []
				},
				{
					"name": "Generate image with custom text",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}image/400x200/008080/ffffff?text=Hello+Peter",
							"host": [
								"{{base_url}}image"
							],
							"path": [
								"400x200",
								"008080",
								"ffffff"
							],
							"query": [
								{
									"key": "text",
									"value": "Hello+Peter"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate image with custom colors",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}image/400x200/282828"
					},
					"response": []
				},
				{
					"name": "Generate image with different formats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}image/400x200?type=webp&text=I+am+a+webp+image",
							"host": [
								"{{base_url}}image"
							],
							"path": [
								"400x200"
							],
							"query": [
								{
									"key": "type",
									"value": "webp"
								},
								{
									"key": "text",
									"value": "I+am+a+webp+image"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate image with custom font family",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}image/400x200/282828?fontFamily=pacifico&text=I+am+a+pacifico+font",
							"host": [
								"{{base_url}}image"
							],
							"path": [
								"400x200",
								"282828"
							],
							"query": [
								{
									"key": "fontFamily",
									"value": "pacifico"
								},
								{
									"key": "text",
									"value": "I+am+a+pacifico+font"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate image with custom font size",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}image/400x200/008080/ffffff?text=Hello+Peter!&fontSize=16",
							"host": [
								"{{base_url}}image"
							],
							"path": [
								"400x200",
								"008080",
								"ffffff"
							],
							"query": [
								{
									"key": "text",
									"value": "Hello+Peter!"
								},
								{
									"key": "fontSize",
									"value": "16"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate identicon",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}icon/abc123/150"
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login user and get tokens",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"emilys\",\r\n    \"password\": \"emilyspass\",\r\n    \"expiresInMinins\": \"include\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}auth/login"
					},
					"response": []
				},
				{
					"name": "Get current auth user",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}auth/me"
					},
					"response": []
				},
				{
					"name": "Refresh auth session",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}auth/refresh"
					},
					"response": []
				},
				{
					"name": "6 uzduotis",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accessToken",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3Mzc3MjQxNDUsImV4cCI6MTczNzcyNzc0NX0.xiWi7RCr7E1yVp4bOhBE2yxl6gszomIZ3iY20Lu2SRc",
								"type": "text",
								"disabled": true
							},
							{
								"key": "refreshToken",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3Mzc3MjQxNDUsImV4cCI6MTc0MDMxNjE0NX0.VIt1bGBGxy0E5S5k62dtdDSkEMVvxbq9gKwyqlY7Sv4",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}docs/auth#auth-me",
							"host": [
								"{{base_url}}docs"
							],
							"path": [
								"auth"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							],
							"hash": "auth-me"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get all products",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}products"
					},
					"response": []
				},
				{
					"name": "Get a single product",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}products/2"
					},
					"response": []
				},
				{
					"name": "Search products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}products/search?q=chair",
							"host": [
								"{{base_url}}products"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "chair"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit and skip products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}products?limit=10&skip=10&select=title,price",
							"host": [
								"{{base_url}}products"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "title,price"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sort products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}products?sortBy=title&order=asc",
							"host": [
								"{{base_url}}products"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "title"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all products categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}products/categories"
					},
					"response": []
				},
				{
					"name": "Get products category list",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}products/category-list"
					},
					"response": []
				},
				{
					"name": "Get products by a category",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}products/category/smartphones"
					},
					"response": []
				},
				{
					"name": "Add a new product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Brangus niekalas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}products/add"
					},
					"response": []
				},
				{
					"name": "Update a product",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Dar labiau pabranges niekalas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}products/1"
					},
					"response": []
				},
				{
					"name": "Delete a product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}products/1"
					},
					"response": []
				}
			]
		},
		{
			"name": "Carts",
			"item": [
				{
					"name": "Get all carts",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}carts"
					},
					"response": []
				},
				{
					"name": "Get a single cart",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}carts/2"
					},
					"response": []
				},
				{
					"name": "Get carts by a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}carts/user/5"
					},
					"response": []
				},
				{
					"name": "Add a new cart",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"products\": [\r\n      {\r\n        \"id\": 14,\r\n        \"quantity\": 5\r\n      },\r\n      {\r\n        \"id\": 99,\r\n        \"quantity\": 12\r\n      }\r\n    ]\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}carts/add"
					},
					"response": []
				},
				{
					"name": "Update a cart",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 1,\r\n    \"products\": [\r\n      {\r\n        \"id\": 14,\r\n        \"quantity\": 5\r\n      },\r\n      {\r\n        \"id\": 99,\r\n        \"quantity\": 12\r\n      }\r\n    ]\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}carts/1"
					},
					"response": []
				},
				{
					"name": "Delete a cart",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}carts/1"
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipies",
			"item": [
				{
					"name": "Get all recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}recipes"
					},
					"response": []
				},
				{
					"name": "Get a single recipe",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}recipes/5"
					},
					"response": []
				},
				{
					"name": "Search recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}recipes/search?q=vegetarian",
							"host": [
								"{{base_url}}recipes"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "vegetarian"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit and skip recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}recipes?limit=10&skip=10&select=name,image",
							"host": [
								"{{base_url}}recipes"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "name,image"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sort recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}recipes?sortBy=name&order=asc",
							"host": [
								"{{base_url}}recipes"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "name"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all recipes tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}recipes/tags"
					},
					"response": []
				},
				{
					"name": "Get recipes by a tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}recipes/tag/Pizza"
					},
					"response": []
				},
				{
					"name": "Get recipes by a meal",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}recipes/meal-type/dinner"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}users"
					},
					"response": []
				},
				{
					"name": "Login user and get tokens",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"emilys\",\r\n    \"password\": \"emilyspass\",\r\n    \"expiresInMinins\": 30\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}users/login"
					},
					"response": []
				},
				{
					"name": "Get current authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}user/me"
					},
					"response": []
				},
				{
					"name": "Get a single user",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}users/5"
					},
					"response": []
				},
				{
					"name": "Search users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}users/search?q=James",
							"host": [
								"{{base_url}}users"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "James"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}users/filter?key=hair.color&value=White",
							"host": [
								"{{base_url}}users"
							],
							"path": [
								"filter"
							],
							"query": [
								{
									"key": "key",
									"value": "hair.color"
								},
								{
									"key": "value",
									"value": "White"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit and skip users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}users?limit=5&skip=10&select=firstName,age",
							"host": [
								"{{base_url}}users"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "firstName,age"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sort and order users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}users?sortBy=firstName&order=asc",
							"host": [
								"{{base_url}}users"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "firstName"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user's carts by user id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}users/6/carts"
					},
					"response": []
				},
				{
					"name": "Get user's posts by user id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}users/1/posts"
					},
					"response": []
				},
				{
					"name": "Get user's todos by user id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}users/1/todos"
					},
					"response": []
				},
				{
					"name": "Add a new user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n  \"firstName\": \"Ali\",\r\n  \"lastName\": \"Baba\",\r\n  \"age\": 666\r\n  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}users/add"
					},
					"response": []
				},
				{
					"name": "Update a user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\": 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}users/1"
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}users/5"
					},
					"response": []
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get all posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}posts"
					},
					"response": []
				},
				{
					"name": "Get a single post",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}posts/4"
					},
					"response": []
				},
				{
					"name": "Limit and skip posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}posts?limit=10&skip=10&select=title,reactions,userId",
							"host": [
								"{{base_url}}posts"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "title,reactions,userId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sort posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}posts?sortBy=body&order=desc",
							"host": [
								"{{base_url}}posts"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "body"
								},
								{
									"key": "order",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all posts tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}posts/tags"
					},
					"response": []
				},
				{
					"name": "Get posts tag list",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}posts/tag-list"
					},
					"response": []
				},
				{
					"name": "Get posts by a tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}posts/tag/crime"
					},
					"response": []
				},
				{
					"name": "Get all posts by user id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}posts/user/1"
					},
					"response": []
				},
				{
					"name": "Get post's comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}posts/3/comments"
					},
					"response": []
				},
				{
					"name": "Add a new post",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"I am testing something.\",\r\n  \"userId\": 1,\r\n  \"body\": \"I am realy testing something.\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}posts/add",
							"host": [
								"{{base_url}}posts"
							],
							"path": [
								"add"
							],
							"query": [
								{
									"key": "title",
									"value": "I am testing something",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "body",
									"value": "I am realy testing something",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a post",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"testing\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}posts/1"
					},
					"response": []
				},
				{
					"name": "Delete a post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}posts/20"
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get all comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//. Parašyti testą '{{base_url}}comments' request'ui, kuris patikrina, kiek komentarų turi Post, kurio id=46\r",
									"\r",
									"pm.test(\"Komentarų turi Post su ID 46\", function () {    \r",
									"    const postId46 = pm.response.json().comments.filter(comment => comment.postId === 46);\r",
									"    console.log('Iš viso komentarų su ID 46:', postId46.length);\r",
									"    pm.expect(postId46.length).to.be.at.least(1); \r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}comments"
					},
					"response": []
				},
				{
					"name": "Get a single comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}comments/4"
					},
					"response": []
				},
				{
					"name": "Limit and skip comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}comments?limit=10&skip=10&select=body,postId",
							"host": [
								"{{base_url}}comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "body,postId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all comments by post id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}comments/post/5"
					},
					"response": []
				},
				{
					"name": "Add a new comment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"body\": \"This makes no sense to me!\",\r\n  \"postId\": 1,\r\n  \"userId\": 5\r\n    \r\n  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}comments/add"
					},
					"response": []
				},
				{
					"name": "Update a comment",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"copy paste fest\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}comments/1"
					},
					"response": []
				},
				{
					"name": "Delete a comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}comments/100"
					},
					"response": []
				}
			]
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "Get all todos",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}todos"
					},
					"response": []
				},
				{
					"name": "Get a single todo",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}todos/5"
					},
					"response": []
				},
				{
					"name": "Get a random todo",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}todos/random"
					},
					"response": []
				},
				{
					"name": "Limit and skip todos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}todos?limit=3&skip=10",
							"host": [
								"{{base_url}}todos"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "skip",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all todos by user id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}todos/user/1"
					},
					"response": []
				},
				{
					"name": "Add a new todo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"todo\": \"Use DummyJSON in the testing\",\r\n  \"completed\": false,\r\n  \"userId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}todos/add"
					},
					"response": []
				},
				{
					"name": "Update a todo",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"13\",\r\n  \"todo\": \"Do something boring for I don't care about it\",\r\n  \"completed\": false,\r\n  \"userId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}todos/1"
					},
					"response": []
				},
				{
					"name": "Delete a todo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}todos/15"
					},
					"response": []
				}
			]
		},
		{
			"name": "Quotes",
			"item": [
				{
					"name": "Get all quotes",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}quotes"
					},
					"response": []
				},
				{
					"name": "Get a single quote",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}quotes/15"
					},
					"response": []
				},
				{
					"name": "Get a random quote",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}quotes/random"
					},
					"response": []
				},
				{
					"name": "Limit and skip quotes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}quotes?limit=4&skip=9",
							"host": [
								"{{base_url}}quotes"
							],
							"query": [
								{
									"key": "limit",
									"value": "4"
								},
								{
									"key": "skip",
									"value": "9"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// 3. Aprašyti testus:\r",
					"//       3.1 Patikrinti kiekvieno request status kodą\r",
					"//       3.2 Patikrinti kiekvieno request formatą\r",
					"//       3.3 Patikrinti, ar kiekvienas response JSON neturi 'error elemento'\r",
					"\r",
					"pm.test(\"Status codes are 2**\", function () {\r",
					"    pm.expect(pm.response.code).to.be.within(200, 203);\r",
					"});\r",
					"\r",
					"pm.test('Body JSON formato?', function() {\r",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
					"});\r",
					"\r",
					"pm.test(\"Response does not contain error\", function () {\r",
					"    try {\r",
					"        pm.response.json();\r",
					"    } catch (e) {\r",
					"        pm.expect.fail(\"Response is not a valid JSON\");\r",
					"    }\r",
					"    pm.expect(pm.response.json()).to.not.have.property('error');\r",
					"});"
				]
			}
		}
	]
}